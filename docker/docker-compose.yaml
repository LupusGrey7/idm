version: "3.8"

volumes:
  data:
  export:
networks:
  idm_network:

services:
  postgres-db: # main DB-> start: docker-compose up -d
    image: docker.io/postgres:17-alpine
    container_name: postgres-server
    hostname: postgres-db
    ports:
      - "127.0.0.1:5433:5432" # Используем другой порт (5433)
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - data:/var/lib/postgresql/data
      - export:/export
    networks:
      - idm_network
  test-postgres: # DB for Test - for start: docker-compose up -d test-postgres
    image: postgres:17-alpine
    container_name: test-postgres
    ports:
     - "127.0.0.1:5434:5432" # Используем другой порт (5434)
    environment:
      #POSTGRES_HOST_AUTH_METHOD: trust  # Разрешает подключение без пароля
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: idm_tests
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d # Автоматическое применение миграций # goose migrations
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U test -d idm_tests" ]
      interval: 5s
      timeout: 5s
      retries: 5